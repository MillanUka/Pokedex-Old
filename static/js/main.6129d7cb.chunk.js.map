{"version":3,"sources":["components/PokemonPortrait.js","classes/Pokemon.js","classes/Utils.js","components/SearchBar.js","components/PokemonDisplay.js","components/Filter.js","components/PokemonList.js","App.js","serviceWorker.js","index.js"],"names":["PokemonPortrait","props","state","pokemon","this","Fragment","className","name","src","id","toLowerCase","alt","width","height","Component","Pokemon","type","species","weight","abilities","stats","desc","total","forEach","element","map","index","currentType","currentAbility","currentStat","stat","value","max","emptyList","list","length","SearchBar","searchInput","onChange","e","handleChange","listToCopyFrom","listToCopyTo","pokemonList","fullList","ListComponent","target","console","log","push","setState","displayMode","selectedPokemon","includes","PokemonDisplay","align","border-style","formatType","formatAbilities","formatStats","calculateTotalStats","Filter","handleButtonClick","showDropdown","container","React","createRef","sortByHeight","bind","sortByWeight","sortByName","sortByID","onClick","sort","compareHeight","compareWeight","compareName","compareID","a","b","PokemonList","readInFile","slice","i","data","currentPokemon","newPokemon","setDesc","window","scrollTo","displayPokemon","renderPortraits","key","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mtzCA6BeA,G,kBA1BX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAOT,IACEC,EAAYC,KAAKH,MAAjBE,QAER,OACI,kBAAC,IAAME,SAAP,KACI,yBAAKC,UAAU,YACP,4BAAKH,EAAQI,MACb,yBAAKD,UAAU,iBACX,yBAAKE,IAAK,UAAYL,EAAQM,GAAK,IAAMN,EAAQI,KAAKG,cAAgB,OAAQC,IAAK,cAAgBR,EAAQI,KAAKG,cAAeE,MAAM,QAAQC,OAAO,e,kDAjBlJC,c,OCuFfC,E,WAnFX,WAAYN,EAAIF,EAAMS,EAAMC,EAASJ,EAAQK,EAAQC,EAAWC,GAAQ,oBACpEhB,KAAKK,GAAKA,EACVL,KAAKG,KAAOA,EACZH,KAAKY,KAAOA,EACZZ,KAAKa,QAAUA,EACfb,KAAKS,OAASA,EACdT,KAAKc,OAASA,EACdd,KAAKe,UAAYA,EACjBf,KAAKgB,MAAQA,EACbhB,KAAKiB,KAAO,G,kEAIZ,IAAIC,EAAQ,EAKZ,OAJAlB,KAAKgB,MAAMG,SAAQ,SAAAC,GACfF,GAASE,KAGNF,I,8BAGHD,GACJjB,KAAKiB,KAAOA,I,mCAGF,IAAD,OACT,OAAOjB,KAAKY,KAAKS,KAAI,WAAcC,GAAU,EAArBvB,QAAsB,IACtCwB,EAAc,EAAKX,KAAKU,GAC5B,OACI,kBAAC,IAAMrB,SAAP,CAAgBI,GAAIkB,GAChB,yBAAKrB,UAAWqB,GACZ,4BAAKA,U,wCAON,IAAD,OACd,OAAOvB,KAAKe,UAAUM,KAAI,WAAcC,GAAU,EAArBvB,QAAsB,IAC3CyB,EAAiB,EAAKT,UAAUO,GACpC,OACI,kBAAC,IAAMrB,SAAP,CAAgBI,GAAImB,GAChB,4BAAKA,S,oCAMN,IAAD,OACV,OAAOxB,KAAKgB,MAAMK,KAAI,WAAcC,GAAU,EAArBvB,QAAsB,IACvC0B,EAAc,EAAKT,MAAMM,GACzBI,EAAO,GACX,OAAQJ,GACJ,KAAK,EACDI,EAAO,KACP,MACJ,KAAK,EACDA,EAAO,SACP,MACJ,KAAK,EACDA,EAAO,UACP,MACJ,KAAK,EACDA,EAAO,iBACP,MACJ,KAAK,EACDA,EAAO,kBACP,MACJ,KAAK,EACDA,EAAO,QAGf,OACI,4BACI,2BAAIA,GACJ,6BACA,8BAAUC,MAAOF,EAAaG,IAAI,gB,KC9EtCC,EAAY,SAACC,GACzBA,EAAKC,OAAS,GCkDHC,E,YAlDX,WAAYnC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTmC,YAAa,IAJF,E,sEAQT,IAAD,OACL,OACI,kBAAC,IAAMhC,SAAP,KACI,2BAAOC,UAAU,YAAYgC,SAAU,SAACC,GACpC,EAAKC,aAAaD,S,mCAOrBA,GAAI,IDXIE,EAAgBC,ECWrB,EACqCtC,KAAKH,MAA9C0C,EADI,EACJA,YAAaC,EADT,EACSA,SAAUC,EADnB,EACmBA,cAE/B,GAAuB,KAAnBN,EAAEO,OAAOf,MAMT,OALAgB,QAAQC,IAAI,sBDfCP,ECgBJG,EDfjBX,EADqCS,ECgBTC,GDb5BF,EAAelB,SAAQ,SAAAC,GACnBkB,EAAaO,KAAKzB,WCaa,MAAvBqB,EAAc3C,OACd2C,EAAcK,SAAS,CAAEC,YAAaN,EAAc3C,MAAMiD,YAAaC,gBAAiB,QAKhGnB,EAAUU,GAEVC,EAASrB,SAAQ,SAAAC,GACTA,EAAQjB,KAAKG,cAAc2C,SAASd,EAAEO,OAAOf,MAAMrB,gBACnDiC,EAAYM,KAAKzB,MAKE,MAAvBqB,EAAc3C,OACd2C,EAAcK,SAAS,CAAEC,YAAaN,EAAc3C,MAAMiD,YAAaC,gBAAiB,OAE5FhD,KAAK8C,SAAS,CAAEb,YAAajC,KAAKF,MAAMmC,YAAcE,EAAEO,OAAOf,Y,GA7C/CjB,aCqCTwC,E,YArCX,WAAYrD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAOT,IACEC,EAAYC,KAAKH,MAAjBE,QACR,OACI,kBAAC,IAAME,SAAP,KACI,yBAAKC,UAAU,UAAUiD,MAAM,UAC3B,yBAAKjD,UAAU,kBACX,4BAAK,IAAMH,EAAQM,IACnB,4BAAK,SAAWN,EAAQI,KACpB,yBAAKC,IAAK,UAAYL,EAAQM,GAAK,IAAMN,EAAQI,KAAKG,cAAgB,OAAQC,IAAK,cAAgBR,EAAQI,KAAKG,cAAeE,MAAM,QAAQC,OAAO,QAAQ0C,MAAM,QAAQC,eAAa,aAG/L,4BAAK,SAAUrD,EAAQsD,cACvB,yBAAKnD,UAAU,kBACX,4BAAK,YAAcH,EAAQc,QAAU,YAErC,4BAAK,WAAad,EAAQU,OAAS,MACnC,4BAAK,WAAaV,EAAQe,OAAS,QAEvC,yBAAKZ,UAAU,aACX,4BAAK,cAAeH,EAAQuD,oBAEhC,4BAAK,UAAWvD,EAAQwD,eACxB,4BAAM,UAAYxD,EAAQyD,uBAC1B,4BAAK,gBAAgB,6BAAS,6BAAUzD,EAAQkB,Y,GAhCvCP,a,OC8Gd+C,E,YA5GX,WAAY5D,GAAQ,IAAD,8BACf,4CAAMA,KAqGV6D,kBAAoB,WAChB,EAAKZ,UAAS,SAAAhD,GACV,MAAO,CAAE6D,cAAe,EAAK7D,MAAM6D,kBAtGvC,EAAKC,UAAYC,IAAMC,YACvB,EAAKhE,MAAQ,CACT6D,cAAc,GAGlB,EAAKI,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,SAAW,EAAKA,SAASH,KAAd,gBAVD,E,sEAcf,OACI,yBAAK9D,UAAU,UACX,4BAAQU,KAAK,SAASV,UAAU,iBAAiBkE,QAASpE,KAAK0D,mBAA/D,WAGC1D,KAAKF,MAAM6D,cACR,yBAAKzD,UAAU,YACX,4BACI,4BAAQA,UAAU,eAAekE,QAASpE,KAAK+D,cAAc,uCAC7D,6BACA,4BAAQ7D,UAAU,eAAekE,QAASpE,KAAKiE,cAAc,uCAC7D,6BACA,4BAAQ/D,UAAU,eAAekE,QAASpE,KAAKkE,YAAY,qCAC3D,6BACA,4BAAQhE,UAAU,eAAekE,QAASpE,KAAKmE,UAAU,wC,qCAQjE,IAAD,EAC4BnE,KAAKH,MAApC0C,EADG,EACHA,YAAaE,EADV,EACUA,cACrBF,EAAY8B,KAAKrE,KAAKsE,eACtB7B,EAAcK,SAAS,CAAEC,YAAaN,EAAc3C,MAAMiD,YAAaC,gBAAiB,S,qCAG5E,IAAD,EAC4BhD,KAAKH,MAApC0C,EADG,EACHA,YAAaE,EADV,EACUA,cACrBF,EAAY8B,KAAKrE,KAAKuE,eACtB9B,EAAcK,SAAS,CAAEC,YAAaN,EAAc3C,MAAMiD,YAAaC,gBAAiB,S,mCAG9E,IAAD,EAC8BhD,KAAKH,MAApC0C,EADC,EACDA,YAAaE,EADZ,EACYA,cACrBF,EAAY8B,KAAKrE,KAAKwE,aACtB/B,EAAcK,SAAS,CAAEC,YAAaN,EAAc3C,MAAMiD,YAAaC,gBAAiB,S,iCAGhF,IAAD,EACgChD,KAAKH,MAApC0C,EADD,EACCA,YAAaE,EADd,EACcA,cACrBF,EAAY8B,KAAKrE,KAAKyE,WACtBhC,EAAcK,SAAS,CAAEC,YAAaN,EAAc3C,MAAMiD,YAAaC,gBAAiB,S,oCAG9E0B,EAAGC,GACb,OAAID,EAAEjE,OAASkE,EAAElE,QACL,EAERiE,EAAEjE,OAASkE,EAAElE,OACN,EAEJ,I,oCAGGiE,EAAGC,GACb,OAAID,EAAE5D,OAAS6D,EAAE7D,QACL,EAER4D,EAAE5D,OAAS6D,EAAE7D,OACN,EAEJ,I,kCAIC4D,EAAGC,GACX,OAAID,EAAEvE,KAAOwE,EAAExE,MACH,EAERuE,EAAEvE,KAAOwE,EAAExE,KACJ,EAEJ,I,gCAGDuE,EAAGC,GACT,OAAID,EAAErE,GAAKsE,EAAEtE,IACD,EAERqE,EAAErE,GAAKsE,EAAEtE,GACF,EAEJ,M,GAnGMK,aC0FNkE,E,YAnFX,WAAY/E,GAAQ,IAAD,8BACf,4CAAMA,KACD2C,SAAW,GAChB,EAAKD,YAAc,GAEnB,EAAKzC,MAAQ,CACTiD,aAAa,EACbC,gBAAiB,MAGrB,EAAK6B,aACL,EAAKtC,YAAc,EAAKC,SAASsC,QAXlB,E,0EAef,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAKjD,SAAUgD,EAAG,CAClC,IAAIE,EAAiBD,EAAKD,GAEtB1E,EAAK4E,EAAe5E,GACpBF,EAAO8E,EAAe9E,KACtBS,EAAOqE,EAAerE,KACtBC,EAAUoE,EAAepE,QACzBJ,EAASwE,EAAexE,OACxBK,EAASmE,EAAenE,OACxBC,EAAYkE,EAAelE,UAC3BC,EAAQiE,EAAejE,MACvBC,EAAOgE,EAAehE,KAEtBiE,EAAa,IAAIvE,EAAQN,EAAIF,EAAMS,EAAMC,EAASJ,EAAQK,EAAQC,EAAWC,GACjFkE,EAAWC,QAAQlE,GACnBjB,KAAKwC,SAASK,KAAKqC,M,+BAIjB,IAAD,OACL,OAAKlF,KAAKF,MAAMiD,aAaZqC,OAAOC,SAAS,EAAG,GAEf,kBAAC,IAAMpF,SAAP,KACI,4BAAQC,UAAU,aAAakE,QAAS,SAACjC,GAAD,OAAO,EAAKmD,eAAe,QAAnE,QACA,kBAAC,EAAD,CAAgBvF,QAASC,KAAKF,MAAMkD,oBAfxC,kBAAC,IAAM/C,SAAP,KACI,gCACI,kBAAC,EAAD,CAAWiC,SAAU,SAACC,GAClB,EAAKC,aAAaD,IACnBI,YAAavC,KAAKuC,YAAaC,SAAUxC,KAAKwC,SAAUC,cAAezC,OAC1E,kBAAC,EAAD,CAAQuC,YAAavC,KAAKuC,YAAaE,cAAezC,QAEzDA,KAAKuF,qB,wCAcH,IAAD,OACd,OAAOvF,KAAKuC,YAAYlB,KAAI,WAAcC,GAAU,EAArBvB,QAC3B,OACI,kBAAC,IAAME,SAAP,CAAgBuF,IAAK,EAAKjD,YAAYjB,GAAOnB,MACzC,4BAAQD,UAAU,iBAAiBkE,QAAS,SAACjC,GAAD,OAAO,EAAKmD,eAAe,EAAK/C,YAAYjB,MACpF,kBAAC,EAAD,CACIkE,IAAKlE,EACLvB,QAAS,EAAKwC,YAAYjB,Y,qCAQnCvB,GACXC,KAAK8C,SAAS,CAAEC,aAAc/C,KAAKF,MAAMiD,YAAaC,gBAAiBjD,Q,GA5ErDW,aCUX+E,E,iLAVX,OACE,yBAAKvF,UAAU,OACb,kBAAC,EAAD,W,GANUQ,aCSEgF,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6129d7cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass PokemonPortrait extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        const { pokemon } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"portrait\" >\r\n                        <h3>{pokemon.name}</h3>\r\n                        <div className=\"portraitImage\">\r\n                            <img src={\"images/\" + pokemon.id + \"-\" + pokemon.name.toLowerCase() + \".jpg\"} alt={\"image of a \" + pokemon.name.toLowerCase()} width=\"130px\" height=\"130px\"></img>\r\n                        </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n    componentDidMount() { }\r\n}\r\n\r\nexport default PokemonPortrait","import React from 'react';\r\n/**\r\n * This class represents a Pokemon \r\n */\r\nclass Pokemon {\r\n    constructor(id, name, type, species, height, weight, abilities, stats) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.species = species;\r\n        this.height = height;\r\n        this.weight = weight;\r\n        this.abilities = abilities;\r\n        this.stats = stats;\r\n        this.desc = \"\";\r\n    }\r\n\r\n    calculateTotalStats() {\r\n        var total = 0.0;\r\n        this.stats.forEach(element => {\r\n            total += element;\r\n        });\r\n\r\n        return total;\r\n    }\r\n\r\n    setDesc(desc) {\r\n        this.desc = desc;\r\n    }\r\n\r\n    formatType() {\r\n        return this.type.map(({ pokemon }, index) => {\r\n            var currentType = this.type[index]\r\n            return (\r\n                <React.Fragment id={currentType}>\r\n                    <div className={currentType}>\r\n                        <h3>{currentType}</h3>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        });\r\n    }\r\n\r\n    formatAbilities() {\r\n        return this.abilities.map(({ pokemon }, index) => {\r\n            var currentAbility = this.abilities[index]\r\n            return (\r\n                <React.Fragment id={currentAbility}>\r\n                    <h3>{currentAbility}</h3>\r\n                </React.Fragment>\r\n            );\r\n        });\r\n    }\r\n\r\n    formatStats() {\r\n        return this.stats.map(({ pokemon }, index) => {\r\n            var currentStat = this.stats[index]\r\n            var stat = \"\";\r\n            switch (index) {\r\n                case 0:\r\n                    stat = \"HP\";\r\n                    break;\r\n                case 1:\r\n                    stat = \"Attack\"\r\n                    break;\r\n                case 2:\r\n                    stat = \"Defense\"\r\n                    break;\r\n                case 3:\r\n                    stat = \"Special Attack\"\r\n                    break;\r\n                case 4:\r\n                    stat = \"Special Defense\"\r\n                    break;\r\n                case 5:\r\n                    stat = \"Speed\";\r\n                default:\r\n            }\r\n            return (\r\n                <h5>\r\n                    <b>{stat}</b >\r\n                    <br></br>\r\n                    <progress value={currentStat} max=\"120\" />\r\n                </h5>\r\n            )\r\n        });\r\n    }\r\n}\r\nexport default Pokemon;","\r\n/**\r\n * \r\n * @param {Array} list to empty\r\n */export const emptyList = (list) => {\r\n    list.length = 0;\r\n}\r\n\r\n/**\r\n * Copies a list to another array\r\n * @param {Array} listToCopyFrom List to copy from\r\n * @param {Array} listToCopyTo \r\n */\r\nexport const copyList = (listToCopyFrom, listToCopyTo) => {\r\n    emptyList(listToCopyTo);\r\n\r\n    listToCopyFrom.forEach(element => {\r\n        listToCopyTo.push(element);\r\n    });\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {emptyList, copyList} from '../classes/Utils.js'\r\n\r\nclass SearchBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchInput: \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <input className=\"searchBar\" onChange={(e) => {\r\n                    this.handleChange(e);\r\n                }\r\n                }></input>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { pokemonList, fullList, ListComponent } = this.props;\r\n\r\n        if (e.target.value === \"\") {\r\n            console.log(\"The input is empty\")\r\n            copyList(fullList,  pokemonList);\r\n            if (ListComponent.state != null) {\r\n                ListComponent.setState({ displayMode: ListComponent.state.displayMode, selectedPokemon: null });\r\n            }\r\n            return;\r\n        }\r\n\r\n        emptyList(pokemonList);\r\n\r\n        fullList.forEach(element => {\r\n            if (element.name.toLowerCase().includes(e.target.value.toLowerCase())) {\r\n                pokemonList.push(element);\r\n            }\r\n\r\n        });\r\n\r\n        if (ListComponent.state != null) {\r\n            ListComponent.setState({ displayMode: ListComponent.state.displayMode, selectedPokemon: null });\r\n        }\r\n        this.setState({ searchInput: this.state.searchInput + e.target.value });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nclass PokemonDisplay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        const { pokemon } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"display\" align=\"center\">\r\n                    <div className=\"pokemonDetails\">\r\n                        <h5>{\"#\" + pokemon.id}</h5>\r\n                        <h5>{\"Name: \" + pokemon.name}\r\n                            <img src={\"images/\" + pokemon.id + \"-\" + pokemon.name.toLowerCase() + \".jpg\"} alt={\"image of a \" + pokemon.name.toLowerCase()} width=\"250px\" height=\"250px\" align=\"right\" border-style=\"dashed\"></img>\r\n                        </h5>\r\n                    </div>\r\n                    <h5>{\"Type: \"}{pokemon.formatType()}</h5>\r\n                    <div className=\"pokemonDetails\">\r\n                        <h5>{\"Species: \" + pokemon.species + \" Pokemon\"}\r\n                        </h5>\r\n                        <h5>{\"Height: \" + pokemon.height + \" m\"}</h5>\r\n                        <h5>{\"Weight: \" + pokemon.weight + \" kg\"}</h5>\r\n                    </div>\r\n                    <div className=\"Abilities\">\r\n                        <h5>{\"Abilities: \"}{pokemon.formatAbilities()}</h5>\r\n                    </div>\r\n                    <h5>{\"Stats: \"}{pokemon.formatStats()}</h5>\r\n                    <h2 >{\"Total: \" + pokemon.calculateTotalStats()}</h2>\r\n                    <h5>{\"Description: \"}<br></br><br></br>{pokemon.desc}</h5>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonDisplay","import React, { Component } from 'react';\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.container = React.createRef();\r\n        this.state = {\r\n            showDropdown: false\r\n        };\r\n\r\n        this.sortByHeight = this.sortByHeight.bind(this);\r\n        this.sortByWeight = this.sortByWeight.bind(this);\r\n        this.sortByName = this.sortByName.bind(this);\r\n        this.sortByID = this.sortByID.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter\">\r\n                <button type=\"button\" className=\"DropdownButton\" onClick={this.handleButtonClick}>\r\n                    Sort By\r\n                </button>\r\n                {this.state.showDropdown && (\r\n                    <div className=\"dropdown\">\r\n                        <ul>\r\n                            <button className=\"filterButton\" onClick={this.sortByHeight}><li>Height</li></button>\r\n                            <br></br>\r\n                            <button className=\"filterButton\" onClick={this.sortByWeight}><li>Weight</li></button>\r\n                            <br></br>\r\n                            <button className=\"filterButton\" onClick={this.sortByName}><li>Name</li></button>\r\n                            <br></br>\r\n                            <button className=\"filterButton\" onClick={this.sortByID}><li>ID</li></button>\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sortByHeight() {\r\n        const { pokemonList, ListComponent } = this.props;\r\n        pokemonList.sort(this.compareHeight);\r\n        ListComponent.setState({ displayMode: ListComponent.state.displayMode, selectedPokemon: null });\r\n    }\r\n\r\n    sortByWeight() {\r\n        const { pokemonList, ListComponent } = this.props;\r\n        pokemonList.sort(this.compareWeight);\r\n        ListComponent.setState({ displayMode: ListComponent.state.displayMode, selectedPokemon: null });\r\n    }\r\n\r\n    sortByName() {\r\n        const { pokemonList, ListComponent } = this.props;\r\n        pokemonList.sort(this.compareName);\r\n        ListComponent.setState({ displayMode: ListComponent.state.displayMode, selectedPokemon: null });\r\n    }\r\n\r\n    sortByID() {\r\n        const { pokemonList, ListComponent } = this.props;\r\n        pokemonList.sort(this.compareID);\r\n        ListComponent.setState({ displayMode: ListComponent.state.displayMode, selectedPokemon: null });\r\n    }\r\n\r\n    compareHeight(a, b) {\r\n        if (a.height > b.height) {\r\n            return -1;\r\n        }\r\n        if (a.height < b.height) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    compareWeight(a, b) {\r\n        if (a.weight > b.weight) {\r\n            return -1;\r\n        }\r\n        if (a.weight < b.weight) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n\r\n    }\r\n\r\n    compareName(a, b) {\r\n        if (a.name < b.name) {\r\n            return -1;\r\n        }\r\n        if (a.name > b.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    compareID(a, b) {\r\n        if (a.id < b.id) {\r\n            return -1;\r\n        }\r\n        if (a.id > b.id) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //Handles button click. Dorp downs the dropdown\r\n    handleButtonClick = () => {\r\n        this.setState(state => {\r\n            return { showDropdown: !this.state.showDropdown };\r\n        });\r\n    }\r\n}\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport PokemonPortrait from './PokemonPortrait';\r\nimport data from \"../data/pokemon.json\"\r\nimport Pokemon from '../classes/Pokemon';\r\nimport SearchBar from \"./SearchBar\"\r\nimport PokemonDisplay from \"./PokemonDisplay\"\r\nimport Filter from './Filter';\r\nclass PokemonList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.fullList = [];\r\n        this.pokemonList = [];\r\n\r\n        this.state = {\r\n            displayMode: false,\r\n            selectedPokemon: null\r\n        };\r\n\r\n        this.readInFile();\r\n        this.pokemonList = this.fullList.slice();\r\n    }\r\n\r\n    readInFile() {\r\n        for (var i = 0; i < data.length; ++i) {\r\n            var currentPokemon = data[i];\r\n\r\n            var id = currentPokemon.id\r\n            var name = currentPokemon.name;\r\n            var type = currentPokemon.type;\r\n            var species = currentPokemon.species;\r\n            var height = currentPokemon.height;\r\n            var weight = currentPokemon.weight;\r\n            var abilities = currentPokemon.abilities;\r\n            var stats = currentPokemon.stats;\r\n            var desc = currentPokemon.desc;\r\n\r\n            var newPokemon = new Pokemon(id, name, type, species, height, weight, abilities, stats);\r\n            newPokemon.setDesc(desc);\r\n            this.fullList.push(newPokemon);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.displayMode) {\r\n            return (\r\n                <React.Fragment>\r\n                    <header>\r\n                        <SearchBar onChange={(e) => {\r\n                            this.handleChange(e);\r\n                        }} pokemonList={this.pokemonList} fullList={this.fullList} ListComponent={this} />\r\n                        <Filter pokemonList={this.pokemonList} ListComponent={this}/>\r\n                    </header>\r\n                    {this.renderPortraits()}\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n            return (\r\n                <React.Fragment>\r\n                    <button className=\"backButton\" onClick={(e) => this.displayPokemon(null)}>Back</button>\r\n                    <PokemonDisplay pokemon={this.state.selectedPokemon} />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderPortraits() {\r\n        return this.pokemonList.map(({ pokemon }, index) => {\r\n            return (\r\n                <React.Fragment key={this.pokemonList[index].name}>\r\n                    <button className=\"portraitButton\" onClick={(e) => this.displayPokemon(this.pokemonList[index])}>\r\n                        <PokemonPortrait\r\n                            key={index}\r\n                            pokemon={this.pokemonList[index]}\r\n                        />\r\n                    </button>\r\n                </React.Fragment>\r\n            );\r\n        });\r\n    }\r\n\r\n    displayPokemon(pokemon) {\r\n        this.setState({ displayMode: !this.state.displayMode, selectedPokemon: pokemon })\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({ displayMode: this.state.displayMode, selectedPokemon: null });\r\n    // }\r\n\r\n}\r\n\r\nexport default PokemonList;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport PokemonList from \"./components/PokemonList\";\r\nclass App extends Component {\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <PokemonList></PokemonList>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}